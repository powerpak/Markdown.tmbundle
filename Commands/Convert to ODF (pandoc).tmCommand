<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>autoScrollOutput</key>
	<true/>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env bash
[[ -f "${TM_SUPPORT_PATH}/lib/bash_init.sh" ]] &amp;&amp; . "${TM_SUPPORT_PATH}/lib/bash_init.sh"

# Source some support functions we need.
. "${TM_SUPPORT_PATH}/lib/html.sh"
. "${TM_SUPPORT_PATH}/lib/webpreview.sh"

# Prepare output window.
html_header "Typesetting&amp;hellip;"

if [[ -z $TM_FILEPATH ]]
  then exit_show_tool_tip "Please save this file first";
fi

outfile=${TM_FILEPATH%.*}

# Save the document to a temporary file, since we will need it a few times
TMPFILE=`mktemp /tmp/markdown.tmbundle.XXXXXX` || exit 1
cat &gt;&gt; "$TMPFILE"

# Get metadata in the document header (pandoc or Jekyll) as a string of -VKEY:VALUE flags
templatevars=$(ruby "$TM_BUNDLE_SUPPORT/bin/pandoc_template_vars.rb" &lt;"$TMPFILE")

# Normalize the document header to a pandoc title block and convert to LaTeX
ruby "$TM_BUNDLE_SUPPORT/bin/normalize_front_matter.rb" &lt;"$TMPFILE" |
pandoc -sS --bibliography="$TM_PANDOC_BIB" --natbib $templatevars -o "$outfile.docx" 2&gt;&amp;1 |
grep -v 'process_defaultadd' | cat
RC=$?

rm "$TMPFILE"

sleep 1
if [[ ! -f "$outfile.tex" ]]
  then echo "pandoc couldn't create a TeX file";
  exit
fi

echo "All done!"

html_footer</string>
	<key>input</key>
	<string>document</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>name</key>
	<string>Convert to DOCX (pandoc)</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>html</string>
	<key>outputLocation</key>
	<string>newWindow</string>
	<key>scope</key>
	<string>text.html.markdown</string>
	<key>uuid</key>
	<string>C910AF8D-7E54-4E6E-A39F-224D09422BB7</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
